---
import { ColorNames } from "@lib/types/colors";

interface Props {
    bgColor?: ColorNames;
    fgColor?: ColorNames;
    variant?: "default" | "inverse" | "outline" | "plain";
    title?: string;
    blend?: boolean;
}

const {
    variant,
    bgColor: _col0 = "primary",
    fgColor: _col1 = "light",
    title,
    blend,
} = Astro.props;

const bgColor = `hsl(var(--color-${_col0}))`;
const fgColor = `hsl(var(--color-${_col1}))`;
---

<article data-variant={variant}>
    <!-- <div class="inner-frame"> -->
    <div class={`illustration ${blend && "blend"}`}>
        <slot name="illustration" />
    </div>
    <!-- </div> -->
</article>

<style define:vars={{ bgColor, fgColor }}>
    article {
        overflow: hidden;

        display: flex;
        flex-direction: column;
        /* background-color: hsla(var(--color-light), 0.0); */
        border: 1px hsla(var(--color-dark), 0.1) solid;

        box-shadow: 0 0 12px hsla(var(--color-dark), 0.025);
    }

    article {
        padding: 8px;
        border-radius: 8px;
    }

    .illustration {
        width: 100%;
        height: 100%;
        display: grid;
        align-items: center;
        justify-items: center;
        overflow: hidden;
        border-radius: 8px;
    }

    .illustration > :global(img) {
        /* width: 50%; */
        height: auto;
        /* object-fit: contain; */
        /* outline: 1px red solid; */
    }
</style>
